---
title: "Task: Clean and Reformat (aka tidy) Stock Data"
subtitle: "Course DS 350"
author: "Bethany Ball"
keep-md: true
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
editor_options: 
  chunk_output_type: console
---

```{r}
# Load necessary libraries
library(readr)
library(tidyverse)
library(readxl)
library(rio)
library(dplyr)
library(tidyr)
library(DT)


# Read in the RDS file from GitHub
stock_data = read_rds("https://github.com/byuistats/data/raw/master/Dart_Expert_Dow_6month_anova/Dart_Expert_Dow_6month_anova.RDS")
```

```{r}
#maybe use substr(month, -4) this pulls the year
#substr(month, 1, -5) pulls month

separated_data <- stock_data %>%
  mutate(
    month = tolower(sub(".*-(.*)\\d{4}", "\\1", contest_period)),  
    year = sub(".*?(\\d{4})$", "\\1", contest_period)   
  ) %>%
  select(contest_period, month, year, value, variable)

print(separated_data)


```

```{r}
filtered_data <- separated_data %>%
  filter(variable == "DJIA")

final_data <- filtered_data %>%
  select(-contest_period)
```

```{r}

pivot_table = final_data %>% 
  pivot_wider(names_from = year, 
                values_from = value,
                )
pivot_table

```


```{r}

cleaned_data <- pivot_table %>%
  mutate(month = case_when(
    is.na(month) ~ "february",  
    month == "febuary" ~ "february",
    month == "dec." ~ "december", 
    TRUE ~ month  
  )) %>%
  mutate(month = factor(month, levels = c("january", "february", "march", "april", "may", 
                                          "june", "july", "august", "september", 
                                          "october", "november", "december"))) 

final_combined_data <- cleaned_data %>%
  group_by(month) %>%
  summarise(across(where(is.numeric), ~ ifelse(all(is.na(.)), NA, sum(., na.rm = TRUE))),  
            across(where(is.character), ~ first(.)))  

final_combined_data <- final_combined_data %>%
  filter(!is.na(month)) %>%
  arrange(month)

final_combined_data

```

```{r}

datatable(final_combined_data, options = list(lengthMenu = c(12, 10, 20)), extensions = "Responsive")

```












